name: build
on:
  workflow_dispatch:
    inputs:
      pkgs:
        description: package name(s) to build, separated by space. Defaults to all
        type: 'string'
        default: 'all'
        required: false
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Generate matrix
        id: generate
        env:
          EVENT: ${{ github.event_name }}
          BEFORE: ${{ github.event.before }}
          CURRENT: ${{ github.sha }}
        run: |
          if [[ "$EVENT" == 'workflow_dispatch' ]]; then
              if [[ -n "${{ github.event.inputs.pkgs }}" ]]; then
                  ARGS="-e ${{ github.event.inputs.pkgs }}"
              fi
              matrix="$(python list.py $ARGS)"
          else
              git fetch origin $BEFORE
              matrix="$(python list.py -e $(git diff --name-only $BEFORE $CURRENT | sed 's|/.*||'))"
          fi
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
          echo "Matrix: $matrix"

  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}
      max-parallel: 1
    steps:
      - name: Get date
        id: date
        run: echo "date=$(date +%F)" >> $GITHUB_OUTPUT

      - name: Cache
        uses: actions/cache@v3
        with:
          path: /var/cache/pacman/pkg
          key: arch-pkgs-${{ steps.date.outputs.date }}
          restore-keys: arch-pkgs

      - name: Update system and install dependencies
        run: pacman -Syu --noconfirm --noprogressbar --needed base-devel devtools btrfs-progs dbus sudo git

      - name: Checkout main
        uses: actions/checkout@v3
        with:
          path: main

      - name: Check for source changes
        id: check
        env:
          PREVIOUS: ${{ github.event.before }}
          CURRENT: ${{ github.sha }}
          PY_VER: ${{ matrix.python }}
        run: |
          cd "$GITHUB_WORKSPACE"/main
          git fetch origin $PREVIOUS
          git diff --name-only $PREVIOUS $CURRENT | grep -q $PY_VER && echo 'run=true' >> $GITHUB_OUTPUT || true

      - name: Checkout repo
        if: steps.check.outputs.run == 'true'
        run: git clone --branch gh-pages https://github.com/${{ github.repository }}.git repo

      - name: Populate /etc/machine-id
        if: steps.check.outputs.run == 'true'
        run: dbus-uuidgen --ensure=/etc/machine-id

      - name: Setup git
        if: steps.check.outputs.run == 'true'
        run: |
          git config --global user.email actions@github.com
          git config --global user.name 'Github Actions'
          git config --global core.editor true

      - name: Setup makepkg configuration
        if: steps.check.outputs.run == 'true'
        run: |
          mkdir -p "$HOME"/{sources,srcpackages,makepkglogs}
          sed -i -e "s|MAKEFLAGS=.*|MAKEFLAGS=-j$(nproc)|" \
                 -e "s|#PKGDEST=.*|PKGDEST='$GITHUB_WORKSPACE/repo'|" \
                 -e "s|#SRCDEST=.*|SRCDEST='$HOME/sources'|" \
                 -e "s|#SRCPKGDEST=.*|SRCPKGDEST='$HOME/srcpackages'|" \
                 -e "s|#LOGDEST=.*|LOGDEST='$HOME/makepkglogs'|" \
                 -e 's|!ccache|ccache|' \
                 /etc/makepkg.conf

      - name: Setup build user
        if: steps.check.outputs.run == 'true'
        run: |
          useradd -m user
          chown -R user "$HOME" "$GITHUB_WORKSPACE"

      - name: Remove existing packages
        if: steps.check.outputs.run == 'true'
        env:
          PY_VER: ${{ matrix.python }}
        run: |
          rm -f "$GITHUB_WORKSPACE"/repo/$PY_VER*.pkg.*

      #- name: Fetch Python release PGP keys
      #  if: steps.check.outputs.run == 'true'
      #  run: gpg --recv-keys 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D

      - name: Build package
        if: steps.check.outputs.run == 'true'
        env:
          PY_VER: ${{ matrix.python }}
        run: |
          cd "$GITHUB_WORKSPACE"/main/$PY_VER
          extra-x86_64-build -- -U user -- --skippgpcheck

      - name: Generate repo database
        if: steps.check.outputs.run == 'true'
        env:
          PY_VER: ${{ matrix.python }}
        run: |
          cd "$GITHUB_WORKSPACE"/repo
          repo-add python.db.tar.gz $PY_VER*.pkg.*
          rm -f *.old

      - name: Generate index.html for repo
        if: steps.check.outputs.run == 'true'
        run: |
          "$GITHUB_WORKSPACE"/main/generate-index.sh "$GITHUB_WORKSPACE"/repo

      - name: Commit packages
        if: steps.check.outputs.run == 'true'
        run: |
          cd "$GITHUB_WORKSPACE"/repo
          git add -u
          git add *
          git commit --fixup HEAD || true
          git rebase -i --autosquash --root

      - name: Push changes
        if: steps.check.outputs.run == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages
          directory: repo
          force: true
